{"version":3,"file":"bundle.js","sources":["../src/lib/game.js","../src/lib/highscore.js","../src/index.js"],"sourcesContent":["// todo vísa í rétta hluti með import\n\n// allar breytur hér eru aðeins sýnilegar innan þessa módúl\n\nlet startButton; // takki sem byrjar leik\nlet problem; // element sem heldur utan um verkefni, sjá index.html\nlet result; // element sem heldur utan um niðurstöðu, sjá index.html\n\nlet playTime; // hversu lengi á að spila? Sent inn gegnum init()\nlet total = 0; // fjöldi spurninga í núverandi leik\nlet correct = 0; // fjöldi réttra svara í núverandi leik\nlet currentProblem; // spurning sem er verið að sýna\n\n/**\n * Klárar leik. Birtir result og felur problem. Reiknar stig og birtir í result.\n */\nfunction finish() {\n  const text = `Þú svaraðir ${correct} rétt af ${total} spurningum og fékkst ${points} stig fyrir. Skráðu þig á stigatöfluna!`;\n\n  // todo útfæra\n}\n\n/**\n * Keyrir áfram leikinn. Telur niður eftir því hve langur leikur er og þegar\n * tími er búinn kallar í finish().\n *\n * Í staðinn fyrir að nota setInterval köllum við í setTimeout á sekúndu fresti.\n * Þurfum þá ekki að halda utan um id á intervali og skilum falli sem lokar\n * yfir fjölda sekúnda sem eftir er.\n *\n * @param {number} current Sekúndur eftir\n */\nfunction tick(current) {\n  // todo uppfæra tíma á síðu\n\n  if (current <= 0) {\n    return finish();\n  }\n\n  return () => {\n    setTimeout(tick(current - 1), 1000);\n  };\n}\n\n/**\n * Býr til nýja spurningu og sýnir undir .problem__question\n */\nfunction showQuestion() {\n  // todo útfæra\n}\n\n/**\n * Byrjar leik\n *\n * - Felur startButton og sýnir problem\n * - Núllstillir total og correct\n * - Kallar í fyrsta sinn í tick()\n * - Sýnir fyrstu spurningu\n */\nfunction start() {\n  // todo útfæra\n}\n\n/**\n * Event handler fyrir það þegar spurningu er svarað. Athugar hvort svar sé\n * rétt, hreinsar input og birtir nýja spurningu.\n *\n * @param {object} e Event þegar spurningu svarað\n */\nfunction onSubmit(e) {\n  e.preventDefault();\n\n  // todo útfæra\n\n  showQuestion();\n}\n\n/**\n * Event handler fyrir þegar stig eru skráð eftir leik.\n *\n * @param {*} e Event þegar stig eru skráð\n */\nfunction onSubmitScore(e) {\n  e.preventDefault();\n\n  // todo útfæra\n\n  result.classList.add('result--hidden');\n  problem.classList.add('problem--hidden');\n  startButton.classList.remove('button--hidden');\n}\n\n/**\n * Finnur öll element DOM og setur upp event handlers.\n *\n * @param {number} _playTime Fjöldi sekúnda sem hver leikur er\n */\nexport default function init(_playTime) {\n  playTime = _playTime;\n\n  // todo útfæra\n}\n","// todo vísa í rétta hluti með import\n\n/**\n * Reikna út stig fyrir svör út frá heildarfjölda svarað á tíma.\n * Ekki þarf að gera ráð fyrir hversu lengi seinasta spurning var sýnd. Þ.e.a.s.\n * stig verða alltaf reiknuð fyrir n-1 af n spurningum.\n *\n * @param {number} total Heildarfjöldi spurninga\n * @param {number} correct Fjöldi svarað rétt\n * @param {number} time Tími sem spurningum var svarað á í sekúndum\n *\n * @returns {number} Stig fyrir svör\n */\nexport function score(total, correct, time) {\n  // todo útfæra\n}\n\n/**\n * Útbúa stigatöflu, sækir gögn í gegnum storage.js\n */\nexport default class Highscore {\n  constructor() {\n    this.scores = document.querySelector('.highscore__scores');\n    this.button = document.querySelector('.highscore__button');\n\n    this.button.addEventListener('click', this.clear.bind(this));\n  }\n\n  /**\n   * Hlaða stigatöflu inn\n   */\n  load() {\n    // todo útfæra\n  }\n\n  /**\n   * Hreinsa allar færslur úr stigatöflu, tengt við takka .highscore__button\n   */\n  clear() {\n    // todo útfæra\n  }\n\n  /**\n   * Hlaða inn stigatöflu fyrir gefin gögn.\n   *\n   * @param {array} data Fylki af færslum í stigatöflu\n   */\n  highscore(data) {\n    // todo útfæra\n  }\n}\n","import initGame from './lib/game';\nimport Highscore from './lib/highscore';\n\nconst PLAY_TIME = 10;\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  initGame(PLAY_TIME);\n\n  const highscore = new Highscore();\n  highscore.load();\n});\n"],"names":["Highscore","scores","document","querySelector","button","addEventListener","clear","bind","data","initGame","highscore","load"],"mappings":";;;EAAA;;;;;;;;;;;;;;;;;;;;;;;;ECiBA;;;;MAGqBA;;;EACnB,uBAAc;EAAA;;EACZ,SAAKC,MAAL,GAAcC,QAAQ,CAACC,aAAT,CAAuB,oBAAvB,CAAd;EACA,SAAKC,MAAL,GAAcF,QAAQ,CAACC,aAAT,CAAuB,oBAAvB,CAAd;EAEA,SAAKC,MAAL,CAAYC,gBAAZ,CAA6B,OAA7B,EAAsC,KAAKC,KAAL,CAAWC,IAAX,CAAgB,IAAhB,CAAtC;EACD;EAED;;;;;;;6BAGO;;EAIP;;;;;;8BAGQ;;EAIR;;;;;;;;gCAKUC,MAAM;EAEf;;;;;;EC5CHN,QAAQ,CAACG,gBAAT,CAA0B,kBAA1B,EAA8C,YAAM;AAClDI,EAEA,MAAMC,SAAS,GAAG,IAAIV,SAAJ,EAAlB;EACAU,EAAAA,SAAS,CAACC,IAAV;EACD,CALD;;;;"}