{"version":3,"file":"bundle.js","sources":["../src/lib/game.js","../src/lib/highscore.js","../src/index.js"],"sourcesContent":["// todo vísa í rétta hluti með import\n\n// allar breytur hér eru aðeins sýnilegar innan þessa módúl\n\nlet startButton; // takki sem byrjar leik\nlet problem; // element sem heldur utan um verkefni, sjá index.html\nlet result; // element sem heldur utan um niðurstöðu, sjá index.html\n\nlet playTime; // hversu lengi á að spila? Sent inn gegnum init()\nlet total = 0; // fjöldi spurninga í núverandi leik\nlet correct = 0; // fjöldi réttra svara í núverandi leik\nlet currentProblem; // spurning sem er verið að sýna\n\n\nconst highscore = new Highscore();\n/**\n * Klárar leik. Birtir result og felur problem. Reiknar stig og birtir í result.\n */\nfunction finish() {\n  const text = `Þú svaraðir ${correct} rétt af ${total} spurningum og fékkst ${points} stig fyrir. Skráðu þig á stigatöfluna!`;\n  const points = score(total, correct, playTime);\n  result.querySelector('.result__text').appendChild(document.createTextNode(text));\n\n  problem.classList.add('problem--hidden');\n  result.classList.remove('result--hidden');\n  // todo útfæra\n\n}\n\n/**\n * Keyrir áfram leikinn. Telur niður eftir því hve langur leikur er og þegar\n * tími er búinn kallar í finish().\n *\n * Í staðinn fyrir að nota setInterval köllum við í setTimeout á sekúndu fresti.\n * Þurfum þá ekki að halda utan um id á intervali og skilum falli sem lokar\n * yfir fjölda sekúnda sem eftir er.\n *\n * @param {number} current Sekúndur eftir\n */\nfunction tick(current) {\n  // todo uppfæra tíma á síðu\n  empty(problem.querySelector('.problem__timer'));\n  problem.querySelector('.problem__timer').appendChild(el('p', `${current}`));\n\n\n  if (current <= 0) {\n    return finish();\n  }\n\n  return () => {\n    setTimeout(tick(current - 1), 1000);\n  };\n}\n\n/**\n * Býr til nýja spurningu og sýnir undir .problem__question\n */\nfunction showQuestion() {\n  // todo útfæra\n  currentProblem = question();\n  empty(document.querySelector('.problem__question'));\n  document.querySelector('.problem__question').appendChild(document.createTextNode(currentProblem.problem));\n}\n\n/*\n * Byrjar leik\n *\n * - Felur startButton og sýnir problem\n * - Núllstillir total og correct\n * - Kallar í fyrsta sinn í tick()\n * - Sýnir fyrstu spurningu\n */\nfunction start() {\n  // todo útfæra\n  startButton.classList.add('button--hidden');\n  total = 0;\n  correct = 0;\n\n  setTimeout(tick(playTime), 1000);\n\n  problem.classList.remove('problem--hidden');\n  problem.querySelector('.problem__input').focus();\n  showQuestion();\n}\n\n/*\n * Event handler fyrir það þegar spurningu er svarað. Athugar hvort svar sé\n * rétt, hreinsar input og birtir nýja spurningu.\n *\n * @param {object} e Event þegar spurningu svarað\n */\nfunction onSubmit(e) {\n  e.preventDefault();\n\n  // todo útfæra\n\n  e.preventDefault();\n  if (Number(problem.querySelector('.problem__input').value) === currentProblem.answer) {\n    correct += 1;\n  }\n  total += 1;\n  problem.querySelector('.problem__input').value = '';\n  problem.querySelector('.problem__input').focus();\n\n  showQuestion();\n}\n\n/*\n * Event handler fyrir þegar stig eru skráð eftir leik.\n *\n * @param {*} e Event þegar stig eru skráð\n */\nfunction onSubmitScore(e) {\n  e.preventDefault();\n\n  // todo útfæra\n  problem.querySelector('.problem__input').value = '';\n  save(result.querySelector('.result__input').value, score(total, correct, playTime));\n\n  empty(result.querySelector('.result__text'));\n  result.querySelector('.result__input').value = '';\n\n  result.classList.add('result--hidden');\n  problem.classList.add('problem--hidden');\n  startButton.classList.remove('button--hidden');\n\n  highscore.load();\n  highscore.highscore(load());\n}\n\n/**\n * Finnur öll element DOM og setur upp event handlers.\n *\n * @param {number} _playTime Fjöldi sekúnda sem hver leikur er\n */\nexport default function init(_playTime) {\n  playTime = _playTime;\n  highscore.clear();\n\n  // todo útfæra\n  startButton = document.querySelector('.start');\n  problem = document.querySelector('.problem');\n  result = document.querySelector('.result');\n\n  startButton.addEventListener('click', start);\n  problem.querySelector('.button').addEventListener('click', onSubmit);\n  result.querySelector('.button').addEventListener('click', onSubmitScore);\n}\n\n","// todo vísa í rétta hluti með import\n\n/**\n * Reikna út stig fyrir svör út frá heildarfjölda svarað á tíma.\n * Ekki þarf að gera ráð fyrir hversu lengi seinasta spurning var sýnd. Þ.e.a.s.\n * stig verða alltaf reiknuð fyrir n-1 af n spurningum.\n *\n * @param {number} total Heildarfjöldi spurninga\n * @param {number} correct Fjöldi svarað rétt\n * @param {number} time Tími sem spurningum var svarað á í sekúndum\n *\n * @returns {number} Stig fyrir svör\n */\nexport function score(total, correct, time) {\n  // todo útfæra\n}\n\n/**\n * Útbúa stigatöflu, sækir gögn í gegnum storage.js\n */\nexport default class Highscore {\n  constructor() {\n    this.scores = document.querySelector('.highscore__scores');\n    this.button = document.querySelector('.highscore__button');\n\n    this.button.addEventListener('click', this.clear.bind(this));\n  }\n\n  /**\n   * Hlaða stigatöflu inn\n   */\n  load() {\n    // todo útfæra\n  }\n\n  /**\n   * Hreinsa allar færslur úr stigatöflu, tengt við takka .highscore__button\n   */\n  clear() {\n    // todo útfæra\n  }\n\n  /**\n   * Hlaða inn stigatöflu fyrir gefin gögn.\n   *\n   * @param {array} data Fylki af færslum í stigatöflu\n   */\n  highscore(data) {\n    // todo útfæra\n  }\n}\n","import initGame from './lib/game';\nimport Highscore from './lib/highscore';\n\nconst PLAY_TIME = 10;\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  initGame(PLAY_TIME);\n\n  const highscore = new Highscore();\n  highscore.load();\n});\n"],"names":["startButton","problem","result","playTime","total","correct","currentProblem","highscore","Highscore","finish","text","points","score","querySelector","appendChild","document","createTextNode","classList","add","remove","tick","current","empty","el","setTimeout","showQuestion","question","start","focus","onSubmit","e","preventDefault","Number","value","answer","onSubmitScore","save","load","init","_playTime","clear","addEventListener","scores","button","bind","data","PLAY_TIME","initGame"],"mappings":"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"}